
package Form;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.lang.String;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Beans.Orcamentos;
import Beans.OrcamentosCSV;
import static Beans.OrcamentosCSV.listaOrcamentos;


public class Orcamento extends javax.swing.JFrame {

    
    public Orcamento() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxCliente = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbxPlaca = new javax.swing.JComboBox<>();
        btnInserir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaO = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtQtd = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();

        jTextField4.setText("jTextField4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 40)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AutoFin");

        jLabel2.setText("Cliente:");

        cbxCliente.setModel(combo());

        jLabel3.setText("Placa:");

        cbxPlaca.setModel(comboPlaca());

        btnInserir.setText("INSERIR");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        tabelaO.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tabelaO.setModel(TabelaO());
        jScrollPane1.setViewportView(tabelaO);

        jLabel4.setText("Descrição");

        jLabel5.setText("qtd");

        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setActionCommand("<Not Set>");
        txtTotal.setEnabled(false);
        txtTotal.setFocusCycleRoot(true);
        txtTotal.setFocusable(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel6.setText("valor");

        jLabel7.setText("Total");

        lblTotal.setText("Valor total do orçamento: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSair))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(91, 91, 91)
                                .addComponent(jLabel5)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel6)
                                .addGap(12, 12, 12))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbxPlaca, 0, 1, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel7))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTotal))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbxPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInserir))
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal)
                .addGap(13, 13, 13)
                .addComponent(btnSair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        Orcamentos o = new Orcamentos();
        Double calc = null;
        Double calcTotal = 0.0;
        
        
        //calculando
        try {

            Double valor = Double.parseDouble(txtValor.getText());
            int qtd = Integer.parseInt(txtQtd.getText());
            calc = valor * qtd;
            // monstrando resultado na tela.
            txtTotal.setText(String.valueOf(calc));
            calcTotal = calc + calcTotal;

        } catch (Exception e) {
            System.out.println("numeros invalidos!");
        }

        try {
            //adiciona item

            o.setItem();
            o.setDescricao(txtDescricao.getText());
            o.setQtd(Integer.parseInt(txtQtd.getText()));
            o.setValor(Double.parseDouble(txtValor.getText()));
            o.setTotal(calc);
            o.setCliente(cbxCliente.getSelectedItem().toString());
            o.setPlaca(cbxPlaca.getSelectedItem().toString());

            //adicionando a lista
            OrcamentosCSV.adicionarItem(o);

            //obtendo a tabela
            DefaultTableModel model = (DefaultTableModel) tabelaO.getModel();

            //adicionando novo item sem recriar
            String[] linha = {
                String.valueOf(o.getItem()),
                o.getDescricao(),
                String.valueOf(o.getQtd()),
                String.valueOf(o.getValor()),
                String.valueOf(o.getTotal()),
                o.getCliente(),
                o.getPlaca()
            };
            model.addRow(linha);
            
            // exibindo o total
            
            lblTotal.setText("Valor total do orçamento: R$ "+calcTotal);

            // limpando campos
            txtDescricao.setText("");
            txtQtd.setText("");
            txtValor.setText("");
           // txtTotal.setText("");

        } catch (Exception e) {
            System.out.println("Não Cadastrado");
        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
       
    }//GEN-LAST:event_txtTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orcamento().setVisible(true);
            }
        });

    }
    //preenche a combobox cliente
    public DefaultComboBoxModel combo() {

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        String arquivoCSV = "./dados/clientes.csv";

        try (BufferedReader leitor = new BufferedReader(new FileReader(arquivoCSV))) {
            String linha;
            while ((linha = leitor.readLine()) != null) {
                String[] valores = linha.split(";");
                model.addElement(valores[0]);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return model;

    }
    //preenche a combobox placa
     public DefaultComboBoxModel comboPlaca() {
        
        DefaultComboBoxModel<String> modelP = new DefaultComboBoxModel<>();
               
        String arquivoCSV = "./dados/veiculos.csv";
        
        try (BufferedReader leitor = new BufferedReader(new FileReader(arquivoCSV))) {
            String linha;
            while ((linha = leitor.readLine()) != null) {
                String[] valores = linha.split(";");
                modelP.addElement(valores[4]);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return modelP;
     }
     // preenche a tabela 
    public DefaultTableModel TabelaO() {
        String[] colunas = {"Item", "Descrição", "Quantidade", "Valor", "Total", "Cliente", "Placa"};
        DefaultTableModel tabela = new DefaultTableModel(colunas, 0);
        ArrayList<Orcamentos> lista = listaOrcamentos();

        for (int i = 0; i < lista.size(); i++) {
            Orcamentos o = lista.get(i);
            String[] linhas = {
               String.valueOf(o.getItem()),
               o.getDescricao(),
               String.valueOf(o.getQtd()),
               String.valueOf(o.getValor()),
               String.valueOf(o.getTotal()),
               o.getCliente(),
               o.getPlaca()
            };
            tabela.addRow(linhas);
        }
        return tabela;

    }

    public void adicinarItem(DefaultTableModel tabela, Orcamentos noI) {
        String[] linha = {
            String.valueOf(noI.getItem()),
            noI.getDescricao(),
            String.valueOf(noI.getQtd()),
            String.valueOf(noI.getValor()),
            String.valueOf(noI.getTotal()),
            noI.getCliente(),
            noI.getPlaca()
        };
        tabela.addRow(linha);

    }
    
    private void atualizaTotalOrcamento() {
        double totalOrcamento = 0.0;

        DefaultTableModel model = (DefaultTableModel) tabelaO.getModel();
        int contador = model.getRowCount();

        for (int i = 0; i < contador; i++) {
            totalOrcamento += (Double) model.getValueAt(i, 4);
        }
        lblTotal.setText("Valor total do orçamento: R$ " + totalOrcamento);
        
    }
    
    private int getPosicao() {
        int pos = tabelaO.getSelectedRow();
        if (pos <= 1) {
            JOptionPane.showMessageDialog(null, "Selecione um item para excluir!!");

        } else {
            JOptionPane.showMessageDialog(null, "Excluido com sucesso!!");
        }
        return pos;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxCliente;
    private javax.swing.JComboBox<String> cbxPlaca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tabelaO;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtQtd;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
